// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck

/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.27.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type AssetInfo =
  | {
      token: {
        contract_addr: string;
      };
    }
  | {
      native_token: {
        denom: string;
      };
    };
export type PairType =
  | 'constant_product'
  | {
      stable_swap: {
        amp: number;
      };
    };
export type Decimal = string;
export interface InstantiateMsg {
  asset_decimals: [number, number];
  asset_infos: [AssetInfo, AssetInfo];
  fee_collector_addr: string;
  pair_type: PairType;
  pool_fees: PoolFee;
  token_code_id: number;
  token_factory_lp: boolean;
}
export interface PoolFee {
  burn_fee: Fee;
  protocol_fee: Fee;
  swap_fee: Fee;
}
export interface Fee {
  share: Decimal;
}
export type ExecuteMsg =
  | {
      receive: Cw20ReceiveMsg;
    }
  | {
      provide_liquidity: {
        assets: [Asset, Asset];
        receiver?: string | null;
        slippage_tolerance?: Decimal | null;
      };
    }
  | {
      withdraw_liquidity: {};
    }
  | {
      swap: {
        belief_price?: Decimal | null;
        max_spread?: Decimal | null;
        offer_asset: Asset;
        to?: string | null;
      };
    }
  | {
      update_config: {
        feature_toggle?: FeatureToggle | null;
        fee_collector_addr?: string | null;
        owner?: string | null;
        pool_fees?: PoolFee | null;
      };
    }
  | {
      collect_protocol_fees: {};
    };
export type Uint128 = string;
export type Binary = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export interface Asset {
  amount: Uint128;
  info: AssetInfo;
}
export interface FeatureToggle {
  deposits_enabled: boolean;
  swaps_enabled: boolean;
  withdrawals_enabled: boolean;
}
export type QueryMsg =
  | {
      pair: {};
    }
  | {
      config: {};
    }
  | {
      protocol_fees: {
        all_time?: boolean | null;
        asset_id?: string | null;
      };
    }
  | {
      burned_fees: {
        asset_id?: string | null;
      };
    }
  | {
      pool: {};
    }
  | {
      simulation: {
        offer_asset: Asset;
      };
    }
  | {
      reverse_simulation: {
        ask_asset: Asset;
      };
    };
export interface MigrateMsg {}
export interface ProtocolFeesResponse {
  fees: Asset[];
}
export type Addr = string;
export interface Config {
  feature_toggle: FeatureToggle;
  fee_collector_addr: Addr;
  owner: Addr;
  pool_fees: PoolFee;
}
export interface PairInfo {
  asset_decimals: [number, number];
  asset_infos: [AssetInfo, AssetInfo];
  contract_addr: string;
  liquidity_token: AssetInfo;
  pair_type: PairType;
}
export interface PoolResponse {
  assets: Asset[];
  total_share: Uint128;
}
export interface ReverseSimulationResponse {
  burn_fee_amount: Uint128;
  offer_amount: Uint128;
  protocol_fee_amount: Uint128;
  spread_amount: Uint128;
  swap_fee_amount: Uint128;
}
export interface SimulationResponse {
  burn_fee_amount: Uint128;
  protocol_fee_amount: Uint128;
  return_amount: Uint128;
  spread_amount: Uint128;
  swap_fee_amount: Uint128;
}
